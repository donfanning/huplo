#!/usr/bin/python
# vim: set ts=2 expandtab:
"""
Module: irc_test
Desc: exercise chat display DBUS interface
Author: John O'Neil
Email: oneil.john@gmail.com
DATE: Saturday, December 21st 2013
  
""" 
from huplo.color import Color
import dbus
import argparse
from traceback import print_exc
import sys
import jsonpickle
from huplo.chat_display import Chat

def main():
  parser = argparse.ArgumentParser(description='Add simulated chat to an live video display.')
  parser.add_argument('-n', '--new', help='Friendly name of new chat to add.', type=str)
  parser.add_argument('-a', '--add', help='Friendly name of new chat to add message to.', default='chat', type=str)
  parser.add_argument('-m', '--message', help='The actual chat text to add. Can include time and pango markup.', type=str)
  parser.add_argument('-u', '--user', help='User nick to add.', default='unknown', type=str)
  parser.add_argument('-r', '--remove', help='Remove a chat box with specified friendly name', type=str)
  parser.add_argument('-c', '--clear', help='Clear a particular chat box using friendlyname', action="store_true")
  parser.add_argument('-x', '--x_pos', help='x position of chat box on screen', default=20,type=int)
  parser.add_argument('-y', '--y_pos', help='y position of chat box on screen', default=400,type=int)
  parser.add_argument('-w', '--width', help='Max width of chat box in pixels.', default=200, type=int)
  parser.add_argument('-s', '--size', help='Max number of chat box elements.', default=10, type=int)
  parser.add_argument('-v', '--verbose', help='Verbose operation. Print status messages during processing', action="store_true")
  parser.add_argument('--shading', help='Show shaded background behind text', action="store_true")
  args = parser.parse_args()
  
  #get ahold of the debus published object and call its methods
  try:
    bus = dbus.SessionBus()
    remote_object = bus.get_object("com.VideoOverlay.Chat",
                                   "/ChatServer")

    chat_iface = dbus.Interface(remote_object, "com.VideoOverlay.Chat")

    if args.remove:
      chat_iface.remove_chat(unicode(args.remove))

    if args.new:
      chat = Chat(size=args.size, x=args.x_pos, y=args.y_pos, width=args.width, show_shading=args.shading)
      pickled = jsonpickle.encode(chat)
      chat_iface.add_chat(unicode(args.new), unicode(pickled))

    if args.clear:
      chat_iface.clear_all_chats()

    if args.message:
      chat_iface.add_msg(unicode(args.add), unicode(args.user), unicode(args.message))

  except dbus.DBusException:
    print_exc()
    sys.exit(1)

if __name__ == '__main__':
  main()   
      
