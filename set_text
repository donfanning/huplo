#!/usr/bin/python
# vim: set ts=2 expandtab:
"""
Module: set_text.py
Desc: use dbus to put simple text on live video
Author: John O'Neil
Email: oneil.john@gmail.com
DATE: Thursday, December 19th 2013

Example usage:
./set_text -a time -m '<span color="yellow" font_desc="courier new 16">%{%a, %d %b %Y %H:%M:%S}%</span>' -x 940 -y 10 --shading
  
""" 
from huplo.color import Color
import dbus
import argparse
from traceback import print_exc
import sys
import jsonpickle
from huplo.text import Text

def main():
  parser = argparse.ArgumentParser(description='Add text to a live video.')
  parser.add_argument('-a', '--add', help='Friendly name of new text to add. Allows us to remove only this later')
  parser.add_argument('-m', '--message', help='The actual text to add. Can include time and pango markup.', default='')
  parser.add_argument('-r', '--remove', help='Remove text with specified friendly name')
  parser.add_argument('-c', '--clear', help='Clear all current text on screen', action='store_true')
  parser.add_argument('-x', '--x_pos', help='x position of text on screen', default=300,type=int)
  parser.add_argument('-y', '--y_pos', help='y position of text on screen', default=300,type=int)
  parser.add_argument('-v', '--verbose', help='Verbose operation. Print status messages during processing', action="store_true")
  parser.add_argument('--shading', help='Show shaded background behind text', action="store_true")
  args = parser.parse_args()
  
  #get ahold of the debus published object and call its methods
  try:
    bus = dbus.SessionBus()
    remote_object = bus.get_object("com.VideoOverlay.Text",
                                   "/TextServer")

    text_iface = dbus.Interface(remote_object, "com.VideoOverlay.Text")

    msg = ''
    if args.message:
      msg = args.message

    if args.clear:
      text_iface.Clear()
      return

    if args.remove:
      text_iface.RemoveText(args.remove)

    if args.add:
      text = Text(message=msg, x=args.x_pos, y=args.y_pos, show_shading=args.shading)
      pickled = jsonpickle.encode(text)
      text_iface.AddText(args.add, unicode(pickled))

  except dbus.DBusException:
    print_exc()
    sys.exit(1)

if __name__ == '__main__':
  main()   
      
